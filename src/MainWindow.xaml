<ui:FluentWindow x:Class="ChatWpfUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:ChatWpfUI"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        mc:Ignorable="d"
        Title="{Binding ViewModel.ApplicationTitle, Mode=OneWay}"
        Height="600"
        Width="800"
        d:DataContext="{d:DesignInstance local:MainWindow,
                                         IsDesignTimeCreatable=False}"
        d:DesignHeight="400"
        d:DesignWidth="600"
        ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
        ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
        ExtendsContentIntoTitleBar="True"
        WindowBackdropType="Mica"
        WindowCornerPreference="Default"
        WindowStartupLocation="CenterScreen"
        >
    <ui:FluentWindow.Resources>
        <Style x:Key="SendButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <ui:SymbolIcon
                                Name="SendIcon"
                                SnapsToDevicePixels="True"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Width="Auto" Height="Auto"
                                Symbol="Send20" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource SystemAccentColorBrush}"/>
                                <Setter Property="Background" TargetName="SendIcon" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ImageButtonStyle" TargetType="Button" BasedOn="{StaticResource SendButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <ui:SymbolIcon
                                Name="PhotoIcon"
                                SnapsToDevicePixels="True"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Width="Auto" Height="Auto"
                                Symbol="Image24" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="PhotoIcon" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground" TargetName="PhotoIcon" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ChatListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
            <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
            <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Name="root">
                            <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="{StaticResource DynamicButtonHoverAnimationDuration}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="{StaticResource DynamicButtonHoverAnimationDuration}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ChatListBoxItemTemplate">
            <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                    Height="50" Margin="-2,0,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Rectangle x:Name="isSelected" Fill="{DynamicResource SystemAccentColorBrush}"
                               Visibility="Hidden"/>
                    <!--Name-->
                    <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"
                               Margin="5,0" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"
                               Text="{Binding Name}" SnapsToDevicePixels="True"/>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected,
                                RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="true">
                    <Setter Property="Visibility" TargetName="isSelected" Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="MessagesDataTemplate">
            <Border Name="MessageBorder" MinHeight="40" MinWidth="280" BorderThickness="1" Background="{DynamicResource ControlFillColorDefaultBrush}" 
                    Margin="10,0,60,10" BorderBrush="{DynamicResource ControlElevationBorderBrush}" CornerRadius="4" SnapsToDevicePixels="True"
                    HorizontalAlignment="Left">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>
                    <TextBlock x:Name="MessageTxtBlock" Grid.Row="1" Margin="7,5,7,0" TextWrapping="Wrap" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                               Text="{Binding Message}"/>
                    <TextBlock Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                               Margin="0,0,5,0" FontSize="10" Opacity="0.8"
                               Text="{Binding Time, StringFormat={}{0:t}}"/>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsUser}" Value="True">
                    <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                    <Setter TargetName="MessageBorder" Property="Margin" Value="60,0,10,10"/>
                    <Setter TargetName="MessageBorder" Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
                    <Setter TargetName="MessageBorder" Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                    <Setter TargetName="MessageTxtBlock" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="MessageBorder" Property="MaxWidth" Value="320"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Message}" Value="{x:Null}"/>
                        <Condition Binding="{Binding IsUser}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="MessageBorder" Property="Margin" Value="0,0,10,10"/>
                        <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </ui:FluentWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border Grid.RowSpan="2" BorderThickness="0,0,0,0" SnapsToDevicePixels="True"
                        BorderBrush="{DynamicResource ControlElevationBorderBrush}">
                    <ListBox ItemsSource="{Binding ViewModel.ChatList}"
                         ItemTemplate="{DynamicResource ChatListBoxItemTemplate}"
                         ItemContainerStyle="{DynamicResource ChatListBoxItemStyle}"
                         SelectedItem="{Binding ViewModel.SelectedChat}"                     
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                </Border>

                <!--Messages-->
                <ItemsControl Grid.Column="1" Margin="0,5,0,0" 
                      ItemsSource="{Binding ViewModel.ChatMessageList}" 
                      ItemTemplate="{DynamicResource MessagesDataTemplate}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <ScrollViewer>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                </ItemsControl>

                <Border Grid.Row="1" Grid.Column="1" SnapsToDevicePixels="True"
                        BorderBrush="{DynamicResource ControlElevationBorderBrush}">
                    <Grid DataContext="{Binding ViewModel.Prompt}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Border Margin="10,10,0,10" MaxHeight="80"
                                BorderThickness="1" BorderBrush="{DynamicResource ControlElevationBorderBrush}">
                            <TextBox x:Name="MessageTxtBox" 
                                     BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                                     TextWrapping="Wrap" 
                                     AcceptsReturn="True" 
                                     CaretBrush="{DynamicResource TextFillColorPrimaryBrush}"
                                     VerticalScrollBarVisibility="Auto" 
                                     Background="{DynamicResource ControlFillColorDefaultBrush}"
                                     Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                     Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}">
                            </TextBox>
                        </Border>
                        <Button x:Name="SendButton" Grid.Column="1" Margin="10"
                                Style="{DynamicResource SendButtonStyle}"
                                Command="{Binding SendCommand}"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

        <ui:TitleBar
            Title="{Binding ViewModel.ApplicationTitle}"
            Grid.Row="0"
            Icon="pack://application:,,,/Assets/chatgpt-icon.png" />
    </Grid>
</ui:FluentWindow>
